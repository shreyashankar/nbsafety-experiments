PUNCTUATION = '`~!@#$%^&*()_-+={[}]|\\:;"<,>.?/}\t\n'
def gen(words, punctuation):
    a = list(punctuation)
    iter_words = iter(words)
    while True:
        try:
            word = next(iter_words)
        except StopIteration:
            break
        else:
            for next_ in a:
                while ((len(word) != 0) and (next_ == word[0])):
                    word = word[1:]
                while ((len(word) != 0) and (next_ == word[(len(word) - 1)])):
                    word = word[:(len(word) - 1)]
            if (len(word) != 0):
                word = list(word)
                for (index, item) in enumerate(word):
                    if (item == '-'):
                        word[index] = ' '
                word = ''.join(word)
                word = word.split(' ')
                for item in word:
                    (yield item)
def remove_punctuation(words, punctuation=PUNCTUATION):
    vals = gen(words, punctuation)
    return vals
def to_lower(words):
    iter_words = iter(words)
    while True:
        try:
            word = next(iter_words)
        except:
            break
        else:
            word = list(word)
            for (index, item) in enumerate(word):
                word[index] = item.lower()
            word = ''.join(word)
            (yield word)
def lower_words(words):
    words = to_lower(words)
    return words
def remove_words(words, stop):
    iter_word = iter(words)
    while True:
        try:
            word = next(iter_word)
        except:
            break
        else:
            if stop:
                if (type(stop) != list):
                    stop = stop.split(' ')
                if (word not in stop):
                    (yield word)
            else:
                (yield word)
def remove_stop_words(words, stop_words=None):
    vals = remove_words(words, stop_words)
    return vals
def tokenize_line(line, stop_words=None, punctuation=PUNCTUATION):
    rev_punc = remove_punctuation(line.split(' '))
    lower_case = lower_words(list(rev_punc))
    rev_stop = remove_stop_words(list(lower_case), stop_words)
    return rev_stop
def counting_words(words):
    curr_dict = {}
    while True:
        try:
            word = next(words)
        except:
            break
        else:
            if (word in curr_dict):
                curr_dict[word] += 1
            else:
                curr_dict[word] = 1
    return curr_dict
def count_words(words):
    mydict = counting_words(words)
    return mydict
def sort_word_counts(wc):
    mydict = count_words(wc)
    return mydict
sort_word_counts(count_words(tokenize_line('This, and The-this from, and A a a')))