def calc_salt(beta, s0, alpha=2):
    x = np.linspace(0, 75, 150)
    s = ((s0 / 2.0) * (1 + np.tanh((alpha - (x / beta)))))
    return (x, s)
def plot_salt(s0):
    for b in np.arange(26):
        if (b == 0):
            b = 0.01
        (x, s) = calc_salt(b, s0)
        if (b == 0.01):
            plt.plot(x, s, label='0.01', color='k', linewidth=2)
        if (b == 15):
            plt.plot(x, s, label='15', color='k', linewidth=3)
        if (b == 25):
            plt.plot(x, s, label='25', color='k', linewidth=2)
        else:
            plt.plot(x, s)
    ax = plt.gca()
    ax.set_xlabel('Distance (X) [km]')
    ax.set_ylabel('Salinity (S) [psu]')
    ax.set_xlim([0, 75])
    plt.legend()
    plt.title('$S = \\frac{S_0}{2} \\left[1 + tanh\\left(2 - \\frac{X}{\\beta}\\right)\\right]$')
plot_salt(30)