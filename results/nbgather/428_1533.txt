def calc_ideal(val):
    times = []
    times.append(val)
    for i in range(10):
        new = times[-1]/2.0
        times.append(new)
    return np.array(times)
def plot_scaling(old, new):
    sns.set(font_scale=2)
    sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o')
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal')
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o')
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'# of Processors')
    plt.legend()
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=2)
    sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o')
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal', linewidth=3)
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o')
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'# of Processors')
    plt.legend()
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=2)
    sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o')
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal', linewidth=3)
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o')
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=3)
    sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o')
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal', linewidth=3)
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o')
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=3)
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o')
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal', linewidth=3)
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o')
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
plot_scaling(old_pd, new_pd)
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=3)
    sns.set_style('darkgrid', {'axes.linewidth':3})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o')
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal', linewidth=3)
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o')
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=3)
    sns.axes_style()
    sns.set_style('darkgrid', {'axes.linewidth':3})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o')
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal', linewidth=3)
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o')
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=3)
    sns.axes_style()
    sns.set_style('darkgrid', {'axes.linewidth':3})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o')
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal', linewidth=3)
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o')
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=3)
    sns.axes_style()
    sns.set_style('darkgrid', {'axes.linewidth':"3"})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o')
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal', linewidth=3)
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o')
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=3)
    sns.axes_style()
    sns.set_style('darkgrid', {'axes.linewidth':'3'})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o')
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal', linewidth=3)
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o')
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=3)
    sns.axes_style()
    sns.set_style('darkgrid', {'axes.linewidth':'3'})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o')
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal', linewidth=3)
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o')
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
    sns.despine()
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=3)
    sns.axes_style()
    sns.set_style('darkgrid', {'axes.linewidth':'3'})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o')
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal', linewidth=3)
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o')
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
    sns.despine(trim=True)
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=3)
    sns.axes_style()
    sns.set_style("darkgrid", {"axes.facecolor": ".9"})
    #sns.set_style('darkgrid', {'axes.linewidth':'3'})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o')
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal', linewidth=3)
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o')
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
    sns.despine(trim=True)
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=3)
    sns.axes_style()
    #sns.set_style("darkgrid", {"axes.facecolor": ".9"})
    sns.set_style('darkgrid', {'axes.linewidth':'3'})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o')
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal', linewidth=3)
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o')
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
    sns.despine(trim=True)
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=3)
    sns.axes_style()
    sns.set_style({'axes.axisbelow': True})
    #sns.set_style("darkgrid", {"axes.facecolor": ".9"})
    #sns.set_style('darkgrid', {'axes.linewidth':'3'})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o')
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal', linewidth=3)
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o')
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
    sns.despine(trim=True)
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=3)
    sns.axes_style()
    sns.set_style('darkgrid', {'axes.axisbelow': True})
    #sns.set_style("darkgrid", {"axes.facecolor": ".9"})
    #sns.set_style('darkgrid', {'axes.linewidth':'3'})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o')
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal', linewidth=3)
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o')
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
    sns.despine(trim=True)
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=3)
    sns.axes_style()
    sns.set_style('darkgrid', {'axes.axisbelow': False})
    #sns.set_style("darkgrid", {"axes.facecolor": ".9"})
    #sns.set_style('darkgrid', {'axes.linewidth':'3'})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o')
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal', linewidth=3)
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o')
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
    sns.despine(trim=True)
plot_scaling(old_pd, new_pd)
sns.axes_style()
def plot_scaling(old, new):
    sns.set(font_scale=3)
    sns.axes_style()
    sns.set_style('darkgrid', {'axes.axisbelow': False})
    sns.set_style('darkgrid', {'axes.linewidth': 3.0})
    #sns.set_style("darkgrid", {"axes.facecolor": ".9"})
    #sns.set_style('darkgrid', {'axes.linewidth':'3'})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o')
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal', linewidth=3)
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o')
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
    sns.despine(trim=True)
sns.axes_style()
plot_scaling(old_pd, new_pd)
sns.axes_style()
def plot_scaling(old, new):
    sns.set(font_scale=3)
    sns.set_context("notebook", font_scale=1.5, rc={"lines.linewidth": 2.5})
    #sns.axes_style()
    #sns.set_style('darkgrid', {'axes.axisbelow': False})
    #sns.set_style('darkgrid', {'axes.linewidth': 3.0})
    #sns.set_style("darkgrid", {"axes.facecolor": ".9"})
    #sns.set_style('darkgrid', {'axes.linewidth':'3'})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o')
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal', linewidth=3)
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o')
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
    sns.despine(trim=True)
sns.axes_style()
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=3)
    sns.set_context("notebook", font_scale=2.5, rc={"lines.linewidth": 3})
    #sns.axes_style()
    #sns.set_style('darkgrid', {'axes.axisbelow': False})
    #sns.set_style('darkgrid', {'axes.linewidth': 3.0})
    #sns.set_style("darkgrid", {"axes.facecolor": ".9"})
    #sns.set_style('darkgrid', {'axes.linewidth':'3'})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o')
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal', linewidth=3)
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o')
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
    sns.despine(trim=True)
sns.axes_style()
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=3)
    sns.set_context("notebook", font_scale=2.5, rc={"lines.linewidth": 3, "markersize": 20})
    #sns.axes_style()
    #sns.set_style('darkgrid', {'axes.axisbelow': False})
    #sns.set_style('darkgrid', {'axes.linewidth': 3.0})
    #sns.set_style("darkgrid", {"axes.facecolor": ".9"})
    #sns.set_style('darkgrid', {'axes.linewidth':'3'})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o')
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal', linewidth=3)
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o')
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
    sns.despine(trim=True)
plot_scaling(old_pd, new_pd)
def plot_scaling_bars(old, new):
    sns.set(font_scale=2)
    sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old.mean(level='sim')
    new_mean = new.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
#    plt.errorbar(procs, old_mean.values, label='SELFE v3.1', marker='o')
    plt.errorbar(procs, old_mean.values, yerr=[old.min(level='sim').values, old.max(level='sim').values], label='SELFE v3.1', marker='o')
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal')
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o')
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1000])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'# of Processors')
    plt.legend()
def plot_scaling(old, new):
    sns.set(font_scale=3)
    sns.set_context("notebook", font_scale=2.5, rc={"lines.linewidth": 3, "markersize": 20})
    #sns.axes_style()
    #sns.set_style('darkgrid', {'axes.axisbelow': False})
    #sns.set_style('darkgrid', {'axes.linewidth': 3.0})
    #sns.set_style("darkgrid", {"axes.facecolor": ".9"})
    #sns.set_style('darkgrid', {'axes.linewidth':'3'})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o', markersize=20)
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal', linewidth=3)
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o')
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
    sns.despine(trim=True)
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=3)
    sns.set_context("notebook", font_scale=2.5, rc={"lines.linewidth": 3, "markersize": 20})
    #sns.axes_style()
    #sns.set_style('darkgrid', {'axes.axisbelow': False})
    #sns.set_style('darkgrid', {'axes.linewidth': 3.0})
    #sns.set_style("darkgrid", {"axes.facecolor": ".9"})
    #sns.set_style('darkgrid', {'axes.linewidth':'3'})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o', markersize=20)
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal', markersize=20)
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o')
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
    sns.despine(trim=True)
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=3)
    sns.set_context("notebook", font_scale=2.5, rc={"lines.linewidth": 3, "markersize": 20})
    #sns.axes_style()
    #sns.set_style('darkgrid', {'axes.axisbelow': False})
    #sns.set_style('darkgrid', {'axes.linewidth': 3.0})
    #sns.set_style("darkgrid", {"axes.facecolor": ".9"})
    #sns.set_style('darkgrid', {'axes.linewidth':'3'})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o', markersize=20)
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal')
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o')
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal', markersize=20)
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
    sns.despine(trim=True)
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=3)
    sns.set_context("notebook", font_scale=2.5, rc={"lines.linewidth": 3, "markersize": 20})
    #sns.axes_style()
    #sns.set_style('darkgrid', {'axes.axisbelow': False})
    #sns.set_style('darkgrid', {'axes.linewidth': 3.0})
    #sns.set_style("darkgrid", {"axes.facecolor": ".9"})
    #sns.set_style('darkgrid', {'axes.linewidth':'3'})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o', markersize=20)
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal')
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o', markersize=20)
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
    sns.despine(trim=True)
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=3)
    sns.set_context("notebook", font_scale=2.5, rc={"lines.linewidth": 3, "markersize": 20})
    #sns.axes_style()
    #sns.set_style('darkgrid', {'axes.axisbelow': False})
    #sns.set_style('darkgrid', {'axes.linewidth': 3.0})
    #sns.set_style("darkgrid", {"axes.facecolor": ".9"})
    #sns.set_style('darkgrid', {'axes.linewidth':'3'})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o', markersize=15)
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal')
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o', markersize=15)
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
    sns.despine(trim=True)
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=3)
    #sns.set_context("notebook", font_scale=2.5, rc={"lines.linewidth": 3, "markersize": 20})
    #sns.axes_style()
    #sns.set_style('darkgrid', {'axes.axisbelow': False})
    #sns.set_style('darkgrid', {'axes.linewidth': 3.0})
    #sns.set_style("darkgrid", {"axes.facecolor": ".9"})
    #sns.set_style('darkgrid', {'axes.linewidth':'3'})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o', markersize=15)
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal')
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o', markersize=15)
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
    sns.despine(trim=True)
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=3)
    #sns.set_context("notebook", font_scale=2.5, rc={"lines.linewidth": 3, "markersize": 20})
    #sns.axes_style()
    #sns.set_style('darkgrid', {'axes.axisbelow': False})
    #sns.set_style('darkgrid', {'axes.linewidth': 3.0})
    #sns.set_style("darkgrid", {"axes.facecolor": ".9"})
    #sns.set_style('darkgrid', {'axes.linewidth':'3'})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(10,10))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o', markersize=15, linewidth=3)
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal')
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o', markersize=15, linewidth=3)
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
    sns.despine(trim=True)
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=3)
    #sns.set_context("notebook", font_scale=2.5, rc={"lines.linewidth": 3, "markersize": 20})
    #sns.axes_style()
    #sns.set_style('darkgrid', {'axes.axisbelow': False})
    #sns.set_style('darkgrid', {'axes.linewidth': 3.0})
    #sns.set_style("darkgrid", {"axes.facecolor": ".9"})
    #sns.set_style('darkgrid', {'axes.linewidth':'3'})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(5,5))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o', markersize=15, linewidth=3)
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal')
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o', markersize=15, linewidth=3)
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
    sns.despine(trim=True)
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=3)
    #sns.set_context("notebook", font_scale=2.5, rc={"lines.linewidth": 3, "markersize": 20})
    #sns.axes_style()
    #sns.set_style('darkgrid', {'axes.axisbelow': False})
    #sns.set_style('darkgrid', {'axes.linewidth': 3.0})
    #sns.set_style("darkgrid", {"axes.facecolor": ".9"})
    #sns.set_style('darkgrid', {'axes.linewidth':'3'})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(8,8))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o', markersize=15, linewidth=3)
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal')
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o', markersize=15, linewidth=3)
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
    sns.despine(trim=True)
plot_scaling(old_pd, new_pd)
def plot_scaling(old, new):
    sns.set(font_scale=2)
    #sns.set_context("notebook", font_scale=2.5, rc={"lines.linewidth": 3, "markersize": 20})
    #sns.axes_style()
    #sns.set_style('darkgrid', {'axes.axisbelow': False})
    #sns.set_style('darkgrid', {'axes.linewidth': 3.0})
    #sns.set_style("darkgrid", {"axes.facecolor": ".9"})
    #sns.set_style('darkgrid', {'axes.linewidth':'3'})
    #sns.set_style('whitegrid')
    f = plt.figure(figsize=(8,8))
    
    old_mean = old_pd.mean(level='sim')
    new_mean = new_pd.mean(level='sim')
    procs = [2**n for n in range(11)]
    
    plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o', markersize=15, linewidth=3)
    old_1cpu = old_mean.values[0]
    old_ideal = calc_ideal(old_1cpu)
    plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal')
             
    new_1cpu = new_mean.values[0]
    new_ideal = calc_ideal(new_1cpu)
    plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o', markersize=15, linewidth=3)
    plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
    
    ax = plt.gca()
    ax.set_xlim([1, 1024])
    ax.set_yscale('log')
    ax.set_xscale('log')
    plt.ylabel(u'Time [$s$]')
    plt.xlabel(u'Number of Cores')
    plt.legend()
    sns.despine(trim=True)
plot_scaling(old_pd, new_pd)