import torch as th
x = th.Tensor(5, 3)
th.is_tensor(x)
th.is_storage(x)
x = th.ByteTensor(5, 3)
x = th.ByteTensor([0,1,2,3])
x = th.ByteTensor([0,1,2,3],[0,1,2,3])
x = th.ByteTensor([[0,1,2,3],[0,1,2,3]])
x = th.ByteTensor((2,3))
x = th.ByteTensor(((2,3),(2,3,5)))
x = th.ByteTensor((2,3,5))
x = th.ByteTensor((2,3))
x = th.ByteTensor(2,3)
x = th.ByteTensor(2,3,5)
th.set_default_tensor_type(x)
th.set_default_tensor_type('int')
th.set_default_tensor_type(x)
x = th.Tensor(5, 3)
th.set_default_tensor_type(x)
th.numel(5)
th.numel(x)
th.eye(5,6)
y = th.eye(5,6)
y = th.eye(5,6,out=True)
y = th.eye(5,6,out=x)
np.linspace(0,5,1)
np.linspace(0,5)
np.linspace(0,5, num=5)
np.arange(0,5,2)
th.logspace(0, 10)
th.logspace(0, 1)
th.logspace(0, 1, steps=2)
th.logspace(0, 1, steps=3)
np.log(2)
np.log(5)
np.log(10)
np.log(50)
np.exp(1)
np.log(np.exp(1))
np.log(np.exp(10))
np.exp(10)
np.log(10)
np.log10(1)
np.log10(10)
np.log10(5)
np.log(10)
np.log(th.logspace(0, 1, steps=3))
np.exp(th.logspace(0, 1, steps=3))
th.logspace(0, 1, steps=3)
np.log(th.logspace(0, 1, steps=3))
np.log10(th.logspace(0, 1, steps=3))
np.log10([1,3.1623,10])
np.log10([1,2.1544,4.6416,10])
np.ones(2,3)
np.ones((2,3))
np.randn(5)
np.random.randn(5)