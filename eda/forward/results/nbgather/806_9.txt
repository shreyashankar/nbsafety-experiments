np.real(lambertw(-0.1))
v_inverse = 1.0/(burn_rate*g)*(g*m_rocket - f_engine*lambertw(-g*m_rocket/f_engine*np.exp((burn_rate*T-v_initial*burn_rate - g*m_rocket))))
plt.plot(T, v_inverse)
thing = -g*m_rocket/f_engine*np.exp((burn_rate*T-v_initial*burn_rate - g*m_rocket))
plt.plot(T, thing)
V = np.linspace(v_initial, 100, 1000)
v_initial
v_inverse = (burn_rate*f_engine*np.log((f_engine - g*m_rocket + burn_rate*V)/(f_engine - g*m_rocket + burn_rate*v_initial))             -burn_rate**2*g*(V - v_initial))/(g**2*b)
v_inverse = (burn_rate*f_engine*np.log((f_engine - g*m_rocket + burn_rate*V)/(f_engine - g*m_rocket + burn_rate*v_initial))             -burn_rate**2*g*(V - v_initial))/(g**2*burn_rate)
plt.plot(V, v_inverse)