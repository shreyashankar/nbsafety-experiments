def plot_scaling(old, new):
        sns.set(font_scale=3)
        sns.set_context("notebook", font_scale=2.5, rc={"lines.linewidth": 3, "markersize": 20})
        #sns.axes_style()
        #sns.set_style('darkgrid', {'axes.axisbelow': False})
        #sns.set_style('darkgrid', {'axes.linewidth': 3.0})
        #sns.set_style("darkgrid", {"axes.facecolor": ".9"})
        #sns.set_style('darkgrid', {'axes.linewidth':'3'})
        #sns.set_style('whitegrid')
        f = plt.figure(figsize=(10,10))
        old_mean = old_pd.mean(level='sim')
        new_mean = new_pd.mean(level='sim')
        procs = [2**n for n in range(11)]
        plt.plot(procs, old_mean.values, label='SELFE v3.1', marker='o', markersize=20)
        old_1cpu = old_mean.values[0]
        old_ideal = calc_ideal(old_1cpu)
        plt.plot(procs, old_ideal, color='grey', linestyle='--', label='SELFE v3.1 ideal')
        new_1cpu = new_mean.values[0]
        new_ideal = calc_ideal(new_1cpu)
        plt.plot(procs, new_mean.values, label='SELFE v4.0', marker='o', markersize=20)
        plt.plot(procs, new_ideal, color='grey', linestyle='-.', label='SELFE v4.0 ideal')
        ax = plt.gca()
        ax.set_xlim([1, 1024])
        ax.set_yscale('log')
        ax.set_xscale('log')
        plt.ylabel(u'Time [$s$]')
        plt.xlabel(u'Number of Cores')
        plt.legend()
        sns.despine(trim=True)
plot_scaling(old_pd, new_pd)